name: Test GitHub Action

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
    
    - name: Run tests
      run: |
        pytest --cov=src/todo_tracker --cov-report=term-missing

  test-action:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Create test TODO file
      run: |
        echo "# TODO: This is a test todo for the action" > test_todo.py
        echo "print('Hello world')  # TODO: Add more features" >> test_todo.py
    
    - name: Test the action (dry run)
      uses: ./
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        dry-run: true
        repo-path: .
      env:
        GITHUB_REPOSITORY: ${{ github.repository }}
    
    - name: Clean up test files
      run: rm -f test_todo.py

  test-docker-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: docker build -t todo-tracker-test .
    
    - name: Test Docker image can run
      run: |
        # Create a test file with TODO
        echo "# TODO: Test docker functionality" > test_docker.py
        
        # Test that the container can run (expect failure with invalid token but should scan files)
        docker run --rm \
          -v $PWD:/workspace \
          -e INPUT_GITHUB_TOKEN=ghp_dummy_token_for_testing_only_1234567890abcdef \
          -e INPUT_DRY_RUN=true \
          -e INPUT_REPO_PATH=/workspace \
          -e GITHUB_REPOSITORY=test/repo \
          todo-tracker-test && echo "Should have failed with auth" || echo "Container built and ran successfully (failed auth as expected)"
        
        # Clean up
        rm -f test_docker.py
